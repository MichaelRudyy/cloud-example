version: "3.4"
services:
    config:
        container_name: config-server
        build:
            context: ./cloud-config-service
            dockerfile: Dockerfile
        image: config-server:latest
        expose:
            - 8888
        ports:
            - 8888:8888
        networks:
            - sc-network
    eureka:
        container_name: eureka-server

        build:
            context: ./eureka-server
            dockerfile: Dockerfile
        image: eureka-server:latest
        #build: ./eureka-server
        #command: ["-c", "bin/wait-for-it.sh config:8888 && java -jar eureka-server.jar"]
        #entrypoint: ["/bin/sh"]
        expose:
            - 8761
        ports:
            - 8761:8761
        networks:
            - sc-network
        depends_on:
            - user
    user:
        container_name: user-service
        build: ./user-service
        command: ["-c", "bin/wait-for-it.sh config:8888 && java -jar user-service.jar"]
        entrypoint: ["/bin/sh"]
        expose:
            - 8080
        ports:
            - 8080:8080
        networks:
            - sc-network

    python:
        container_name: python-service
        build:
            context: ./PythonMicroservice
            dockerfile: Dockerfile
        image: python-service:latest
        #build: ./eureka-server
        #command: ["-c", "bin/wait-for-it.sh config:8888 && java -jar eureka-server.jar"]
        #entrypoint: ["/bin/sh"]
        expose:
        - 8082
        ports:
        - 8082:8082
        networks:
        - sc-network
        depends_on:
        - user
networks:
    sc-network:
        driver: "bridge"